@model crisicheckinweb.ViewModels.VolunteerViewModel
@{
  ViewBag.Title = "Volunteer Home";
  Layout = "~/Views/Shared/_VolunteerLayout.cshtml";
}

<h2>Volunteer Home</h2>

@{
  var commitmentForToday = Model.MyCommitments.FirstOrDefault(x => x.StartDate <= DateTime.Today && DateTime.Today <= x.EndDate);
  if (commitmentForToday != null)
  {
      <div class="panel panel-default">
        <div class="panel-heading">
          <h3 class="panel-title">Commitment for today</h3>
        </div>
        <div class="panel-body">
          <dl class="dl-horizontal">
            <dt>Disaster</dt>
            <dd>@commitmentForToday.Disaster.Name</dd>
            <dt>Location</dt>
            <dd>@commitmentForToday.VolunteerType.Name</dd>
            <dt>Cluster</dt>
            <dd>@commitmentForToday.Cluster.Name</dd>
            <dt>Coordinators</dt>
            <dd>
              @foreach (var clusterCoordinator in Model.ClusterCoordinators.Where(cc => cc.DisasterId == commitmentForToday.DisasterId))
              {
                <span>@(clusterCoordinator.Person.LastName + ", " + clusterCoordinator.Person.FirstName) (Phone - @(clusterCoordinator.Person.PhoneNumber) | Email - @(clusterCoordinator.Person.Email))
                </span><br />
              }
            </dd>
          </dl>
          @if (commitmentForToday.PersonIsCheckedIn)
          {
            using (Html.BeginForm("Checkout", "Home", FormMethod.Post, new { @class = "form-horizontal" }))
            {
              @Html.AntiForgeryToken()
              @Html.Hidden("commitmentId", commitmentForToday.Id)
              <button class="btn btn-black" type="submit">Check-out</button>
              <span> Thank you for your help today!</span>
            }
          }
          else
          {
            using (Html.BeginForm("Checkin", "Home", FormMethod.Post, new { @class = "form-horizontal" }))
            {
              @Html.AntiForgeryToken()
              @Html.Hidden("commitmentId", commitmentForToday.Id)
              <button class="btn btn-black" type="submit">Check-in</button>
              <span> and start helping now!</span>
            }
          }
        </div>
      </div>
  }
}


@using (Html.BeginForm("Assign", "Home"))
{
  @Html.AntiForgeryToken()
  @Html.ValidationSummary()


  <table class="table">
    <tr>
      <th>Volunteer for Disaster</th>
      <th>Activity</th>
      <th>Start Date</th>
      <th>End Date</th>
      <th>Location</th>
      <th></th>
    </tr>
    <tr>
      <td>@Html.DropDownListFor(m => m.SelectedDisasterId, new SelectList(Model.Disasters, "Id", "Name", Model.SelectedDisasterId), "-- Choose One --", new { @class = "form-control", @id = "disasterList" })</td>
      <td>@Html.DropDownListFor(m => m.SelectedClusterId, new SelectList(Model.DisasterClusters, "Cluster.Id", "Cluster.Name", Model.SelectedClusterId), new { @class = "form-control", @id="activityList"})</td>
      <td>@Html.TextBoxFor(m => m.SelectedStartDate, new { id = "dp_startDate", @class = "form-control" })</td>
      <td>@Html.TextBoxFor(m => m.SelectedEndDate, new { id = "dp_endDate", @class = "form-control" })</td>
      <td>
        @Html.DropDownListFor(
                    m => m.VolunteerType,
                    selectList: new SelectList(Model.VolunteerTypes, "Id", "Name", Model.VolunteerType),
                    optionLabel: "-- Choose One --",
                    htmlAttributes: new { @class = "form-control" })
      </td>
      <td><input class="btn btn-black" id="GoButton" type="submit" value="Volunteer" /></td>
    </tr>
  </table>
}

<br />
@if (!Model.MyCommitments.Any())
{
  <h3>Thank you for volunteering. Please select a disaster and a date range that you are able to volunteer for.</h3>
}
else
{
  <h3>My Commitments</h3>
  <table class="table table-striped table-bordered">
    <tr class="ht-header">
      <th>Disaster Name</th>
      <th>Activity</th>
      <th>Start Date</th>
      <th>End Date</th>
      <th>Location</th>
      @if (Model.MyCommitments.Any())
      {
        <th>&nbsp;</th>
      }
    </tr>
    @foreach (var comm in Model.MyCommitments)
    {
      <tr>
        <td>@comm.Disaster.Name</td>
        <td>@comm.Cluster.Name</td>
        <td>@comm.StartDate.ToShortDateString()</td>
        <td>@comm.EndDate.ToShortDateString()</td>
        <td>@comm.VolunteerType.Name</td>
        @using (Html.BeginForm("RemoveCommitment", "Home", FormMethod.Post, new { @class = "navbar-form" }))
        {
          @Html.AntiForgeryToken()
          @Html.HiddenFor(m => m.RemoveCommitmentId, new { @Value = comm.Id })
          <td>
            <button class="btn btn-danger btn-xs" type="submit"><i class="glyphicon glyphicon-remove"></i> Remove</button>
          </td>
        }
      </tr>
    }
  </table>
}
@section scripts
{
  <script type="text/javascript">
    (function ($) {
      $(document).ready(function () {
        $("#dp_startDate").datepicker({ minDate: 'today', onSelect: updateEndDate }).datepicker('setDate',
            '@(Model.SelectedStartDate == default(DateTime) ? DateTime.Now : Model.SelectedStartDate)');
        $("#dp_endDate").datepicker({ minDate: 'today' }).datepicker('setDate',
            '@(Model.SelectedEndDate == default(DateTime) ? DateTime.Now : Model.SelectedEndDate)');

        $('.contact').tooltip();
      });

      function updateEndDate(dateText) {
        $('#dp_endDate').datepicker('option', 'minDate', dateText);
      }

      $(function () {
          $('select#disasterList').change(function () {
              var disasterId = $('#disasterList').val();
              $.ajax({
                  url: '/Home/LoadDisasterClusterList',
                  type: "GET",
                  dataType: "JSON",
                  data: { disasterId: disasterId } ,
                  success: function (disasterClusters) {
                      $("#activityList").html(""); // clear before appending new list 
                      $.each(disasterClusters, function (i, disasterCluster) {
                          $("#activityList").append(
                              $('<option></option>').val(disasterCluster.Cluster.Id).html(disasterCluster.Cluster.Name));
                      });
                  }
              });
          });
      });

    })(jQuery);
    
      
    </script>
}